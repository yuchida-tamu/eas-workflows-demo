name: Publish production update

on:
  push:
    branches: ['main']

jobs:
  # runtime_version:
  #   name: Runtime Version
  #   outputs:
  #     ios_runtime_version: ${{ steps.fingerprint_step_id.outputs.ios_runtime_version }}
  #   steps:
  #     - uses: eas/checkout
  #     - uses: eas/install_node_modules
  #     - name: Install additional tools
  #       run: sudo apt-get update -y && sudo apt-get install -y jq
  #     - name: Set fingerprint variables
  #       id: runtime_version_step_id
  #       run: |
  #         IOS_RUNTIME_VERSION_RAW=$(npx expo-updates fingerprint:generate --platform ios)
  #         IOS_RUNTIME_VERSION=$(echo $RUNTIME_VERSION_RAW | jq -r '.runtimeVersion')
  #         set-output ios_runtime_version $IOS_RUNTIME_VERSION
  # get_ios_build:
  #   name: Check for existing ios build
  #   needs: [runtime_version]
  #   type: get-build
  #   params:
  #     runtime_version: ${{ needs.fingerprint.outputs.ios_runtime_version }}
  #     profile: production
  # build_ios:
  #   name: Build iOS
  #   needs: [get_ios_build]
  #   if: ${{ !needs.get_ios_build.outputs.build_id }}
  #   type: build
  #   params:
  #     platform: ios
  #     profile: production
  # submit_ios_build:
  #   name: Submit iOS Build
  #   needs: [build_ios]
  #   type: submit
  #   params:
  #     build_id: ${{ needs.build_ios.outputs.build_id }}
  publish_ios_update:
      name: Publish iOS update
      # needs: [get_ios_build]
      # if: ${{ needs.get_ios_build.outputs.build_id }}
      type: update
      params:
        branch: production
        platform: ios